
trigger:
  - develop

pool:
  vmImage: 'ubuntu-latest'

variables:
  CMAKE_GENERATOR: Ninja
  CCACHE_DIR: $(Pipeline.Workspace)/ccache

jobs:
  - job: linux_static_vendored
    steps:
      - script: sudo apt-get install ninja-build ccache -y
        displayName: Install dependencies

      - template: .azure/build.yml

  - job: linux_static_external
    steps:
      - script: sudo apt-get install ninja-build ccache libgmp-dev libglpk-dev libarpack2-dev libblas-dev liblapack-dev -y
        displayName: Install dependencies

      - template: .azure/build.yml
        parameters:
          int_blas: false
          int_lapack: false
          int_arpack: false
          int_cxsparse: false
          int_gmp: false
          int_glpk: false

  - job: linux_shared_vendored
    steps:
      - script: sudo apt-get install ninja-build ccache -y
        displayName: Install dependencies

      - template: .azure/build.yml
        parameters:
          build_shared: true

  - job: linux_alpine
    steps:
      # https://github.com/alpinelinux/alpine-chroot-install
      - bash: |
          wget https://raw.githubusercontent.com/alpinelinux/alpine-chroot-install/v0.12.1/alpine-chroot-install && echo '5571ad4d17d14bb09ad23a75060f05553786e564  alpine-chroot-install' | sha1sum -c || exit 1
          alpine() { /alpine/enter-chroot -u "$USER" "$@"; }
          sudo sh alpine-chroot-install -p 'build-base linux-headers git cmake ninja bison flex gmp-dev'
          mkdir build && cd build
          alpine cmake .. -GNinja -DIGRAPH_USE_INTERNAL_BLAS=1 -DIGRAPH_USE_INTERNAL_LAPACK=1 -DIGRAPH_USE_INTERNAL_ARPACK=1 -DIGRAPH_USE_INTERNAL_GLPK=1 -DIGRAPH_USE_INTERNAL_CXSPARSE=1 -DIGRAPH_USE_INTERNAL_GMP=1 -DIGRAPH_VERIFY_FINALLY_STACK=1
          alpine cmake --build . --target build_tests
          alpine ctest -j `nproc` --output-on-failure

  - job: macos
    pool:
      vmImage: macos-latest
    steps:
      - script: brew install ninja ccache
        displayName: Install dependencies

      - task: CMake@1
        displayName: CMake
        inputs:
          cmakeArgs: '.. -DIGRAPH_USE_INTERNAL_BLAS=0 -DIGRAPH_USE_INTERNAL_LAPACK=0 -DIGRAPH_USE_INTERNAL_ARPACK=1 -DIGRAPH_USE_INTERNAL_GLPK=1 -DIGRAPH_USE_INTERNAL_CXSPARSE=1 -DIGRAPH_USE_INTERNAL_GMP=1 -DIGRAPH_VERIFY_FINALLY_STACK=1'

      - task: Cache@2
        inputs:
          key: 'ccache | "$(Agent.OS)"'
          path: $(CCACHE_DIR)
        displayName: Ccache

      - task: CMake@1
        displayName: Build
        inputs:
          cmakeArgs: '--build . --target build_tests'

      - script: cd build && ctest -j `sysctl -n hw.ncpu` --output-on-failure
        displayName: Test

  - job: documentation
    steps:
      - script: sudo apt-get install ninja-build xmlto texinfo source-highlight libxml2-utils xsltproc fop -y
        displayName: Install dependencies

      - task: CMake@1
        displayName: CMake
        inputs:
          cmakeArgs: '..'

      - task: CMake@1
        displayName: Doc build
        inputs:
          cmakeArgs: '--build . --target doc'

